events {
    worker_connections 115;
}

http {
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=10m use_temp_path=off;

    map $request_method $is_purge {
        default   0;
        PURGE     1;
    }

    server {
        location / {
            proxy_pass http://localhost:8080;
        }

        location /images/ {
            proxy_pass           http://localhost:8080/images/;
            proxy_cache          my_cache;
            proxy_cache_key      $host$uri$is_args$args;
            proxy_cache_valid    200 10m;
            proxy_buffering      on;
            proxy_cache_min_uses 2;
            sendfile             on;
            error_page  405      =200 $uri;

            if ($is_purge) {
                set $my_cache_key $host$uri$is_args$args;
            
                content_by_lua_block {
                    local exitStatus = os.execute("/usr/local/bin/nginx-cache-purge /var/cache/nginx 1:2 "..ngx.var.my_cache_key)
            
                    if exitStatus == 0 then
                        ngx.exit(ngx.HTTP_OK)
                    else
                        ngx.exit(ngx.HTTP_BAD_REQUEST)
                    end
                }
            }
        }
    }

    server {
        listen 8080;
        root /home/bohdan/DevOps/Projector/Lesson7; 
 
        location / {
        }

        location ~ /images/\.(gif|jpg|png)$ {
            root /home/bohdan/DevOps/Projector/Lesson7/images;
        }
    }
}
